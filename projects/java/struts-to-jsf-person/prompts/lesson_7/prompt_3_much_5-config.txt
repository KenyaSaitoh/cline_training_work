===============================================
Jakarta EE 10 マイグレーション【高：詳細版】
フェーズ5: 設定ファイルとクリーンアップ
===============================================

struts-to-jsf-personプロジェクトの設定ファイルを、StrutsからJSFに移行し、旧ファイルをクリーンアップしてください。

## マイグレーション内容

### 1. web.xmlの変更

**対象ファイル：** `src/main/webapp/WEB-INF/web.xml`

**削除する設定：**
- Struts ActionServletの全定義
- Strutsのservlet-mapping
- Strutsタグライブラリ設定

**追加する設定：**

**JSF Servlet:**
- servlet-name: `Faces Servlet`
- servlet-class: `jakarta.faces.webapp.FacesServlet`
- load-on-startup: `1`

**JSF Servlet Mapping:**
- url-pattern: `/faces/*` または `*.xhtml`
- 推奨は`/faces/*`（明示的なマッピング）

**Welcome File:**
- `<welcome-file>faces/PersonTablePage.xhtml</welcome-file>`

**データソース設定（維持）:**
- `<resource-ref>`定義はそのまま維持
- JNDI名：`jdbc/HsqldbDS`は変更なし

---

### 2. beans.xmlの作成

**新規作成：** `src/main/webapp/WEB-INF/beans.xml`

**必須設定：**
- XML宣言とスキーマ
- `xmlns="https://jakarta.ee/xml/ns/jakartaee"`
- `version="4.0"`
- `bean-discovery-mode="all"` または `"annotated"`

**役割：**
- CDI（Contexts and Dependency Injection）の有効化
- bean-discovery-modeでBeanスキャン範囲を制御

---

### 3. persistence.xmlの確認

**対象ファイル：** `src/main/resources/META-INF/persistence.xml`

**確認事項：**
- フェーズ1で作成済み
- persistence-unit名がServiceクラスの`@PersistenceContext`と一致
- jta-data-source名が`jdbc/HsqldbDS`
- Personエンティティが認識される設定

---

### 4. 削除する設定ファイル

**削除対象：**
- `src/main/resources/META-INF/ejb-jar.xml` - EJB設定
- `src/main/webapp/WEB-INF/struts-config.xml` - Struts設定
- `src/main/resources/ApplicationResources.properties` - Strutsメッセージリソース（使用していない場合）

---

### 5. プロジェクトのクリーンアップ

**Javaクラスの削除確認：**
- [ ] `action/` パッケージ全体
- [ ] `form/PersonForm.java`
- [ ] `dao/PersonDao.java`
- [ ] `service/PersonService.java`（インターフェース）
- [ ] `service/PersonServiceBean.java`（EJB実装）

**ビューファイルの削除確認：**
- [ ] `*.jsp` ファイル全て

**設定ファイルの削除確認：**
- [ ] `struts-config.xml`
- [ ] `ejb-jar.xml`

**パッケージ構造の確認：**
- 旧パッケージ `pro.kensait.struts.person` → 削除
- 新パッケージ `pro.kensait.jsf.person` → 維持

---

## 変更後の最終構造

```
src/main/java/
└── pro.kensait.jsf.person/
    ├── Person.java              # @Entity
    ├── PersonService.java       # @RequestScoped, @Transactional
    ├── PersonTableBean.java     # @Named, @ViewScoped
    ├── PersonInputBean.java     # @Named, @ViewScoped
    └── PersonUpdateBean.java    # @Named, @ViewScoped

src/main/resources/
└── META-INF/
    └── persistence.xml          # JPA設定

src/main/webapp/
├── PersonTablePage.xhtml        # 一覧画面
├── PersonInputPage.xhtml        # 入力画面
├── PersonConfirmPage.xhtml      # 確認画面
├── css/
│   └── style.css
└── WEB-INF/
    ├── web.xml                  # JSF Servlet設定
    └── beans.xml                # CDI設定
```

---

## 注意事項

### アプリケーションサーバーの変更
- TomEE 8 → Payara Server 6
- Jakarta EE 10完全対応
- データソース設定の再構成が必要

### デプロイメント
- WARファイルのビルド
- Payara Serverへのデプロイ
- コンテキストルートの確認

### データソース
- JNDI名は変更しないが、Payara側でデータソース登録が必要
- 接続プールの設定
- HSQLDBドライバの配置

### 動作確認
- 一覧表示
- 新規登録
- 編集
- 削除
- トランザクション動作
- Flash Scopeによる画面間データ受け渡し

### ログ確認
- Payara Serverのログ
- SQL実行ログ（persistence.xmlの設定による）
- アプリケーションログ

